# 
# Klipper configuration file for Anycubic i3 MEGA S
#
# This config file contains settings of all printer pins (steppers, sensors) for the Anycubic i3 Mega S. 
# Klipper firmware should be compiled for the atmega2560
#
# Config file includes
#  - Mesh bed leveling: BLtouch (or 3DTouch sensor from Triangelab)
#  - Manual meshed bed leveling (commented out)
#  - 'virtual_sdcard' for fast printing without gaps
#  - Buzzer through M300 gcode
#  - Pause/Resume through M600 for filament change
#
# Note: when using BLTouch, home position is determined by 3DTouch. Z limit switches are not used.
#
# The latest version of the config reference is also available online at:
# https://www.klipper3d.org/Config_Reference.html
#
# Based on the work by Barys (@widapro) on GitHub: https://github.com/widapro/3d-printers
# And further improved by Marco Cipriani (@marcocipriani01)


[stepper_x]
step_pin = ar54
dir_pin = ar55
enable_pin = !ar38
step_distance = .0125
endstop_pin = ^!ar3
position_min = 0
position_endstop = 0
position_max = 205
homing_speed = 30
homing_retract_dist = 5
second_homing_speed = 10


[stepper_y]
step_pin = ar60
dir_pin = !ar61
enable_pin = !ar56
step_distance = .0125
endstop_pin = ^!ar42
position_endstop = 0
position_max = 220
homing_speed = 50
homing_retract_dist = 5
second_homing_speed = 10


[stepper_z]
step_pin = ar46
dir_pin = !ar48
enable_pin = !ar62
step_distance = .0025
## Uncomment below for 3dtouch. Comment for mannual mesh bed leveling
endstop_pin = probe:z_virtual_endstop
## Comment 2 lines below for 3dtouch bed leveling and to disable Z limit switches
#endstop_pin = ^!ar18
#position_endstop = 0.0
position_max = 205
homing_speed = 10
homing_retract_dist = 5
second_homing_speed = 3


[stepper_z1]
step_pin = ar36
dir_pin = !ar34
## Comment below for 3dtouch bed leveling and to disable Z limit switches
#endstop_pin = ^!ar43
enable_pin = !ar30
step_distance = .0025


[z_tilt]
z_positions:
  290,15
  -60,15
points:
  20,40
  200,40
horizontal_move_z: 8
retries: 3
retry_tolerance: 0.05


[extruder]
step_pin = ar26
dir_pin = ar28
enable_pin = !ar24
control = pid
## TriangleLab Matrix extruder
step_distance = 0.0029761904
## Original Anycubic Mega S extruder
#step_distance = .00247
## Default nozzle diameter is 0.4
nozzle_diameter = 0.500
filament_diameter = 1.750
heater_pin = ar10
## Uncomment below for the PT1000 temperature sensor (upgrade)
sensor_type = PT1000
## Uncomment below for the default Anycubic Mega temperature sensor
#sensor_type = ATC Semitec 104GT-2
sensor_pin = analog13
min_temp = 0
max_temp = 300
max_extrude_only_distance = 500.0
smooth_time = 1
min_extrude_temp = 180
## Pressure advance needs to be calibrated
#pressure_advance = 0.1
max_extrude_cross_section = 150


[heater_fan extruder_fan]
pin = ar44


[heater_bed]
heater_pin = ar8
sensor_type = EPCOS 100K B57560G104F
sensor_pin = analog14
min_temp = 0
max_temp = 110
smooth_time = 1
control = pid


[fan]
pin = ar9


[mcu]
## Change to match your serial port
serial = /dev/serial/by-id/usb-Silicon_Labs_CP2102N_USB_to_UART_Bridge_Controller_d061fb26bb6ae811b9b298fc9c710798-if00-port0
pin_map = arduino


[printer]
kinematics = cartesian
max_velocity = 300
max_accel = 4000
max_accel_to_decel = 1500
max_z_velocity = 7
max_z_accel = 190
square_corner_velocity = 5


## Do your own measurement
## https://www.klipper3d.org/Resonance_Compensation.html
#[input_shaper]
#shaper_type_x = 3hump_ei
#shaper_freq_x = 73.0
#shaper_type_y = 3hump_ei
#shaper_freq_y = 60.0


[heater_fan stepstick_fan]
pin = ar7


[bltouch]
sensor_pin = ^ar2
control_pin = ar11
## Do your own measurement
x_offset = 0.5
y_offset = -36.5
z_offset = 1.315


[safe_z_home]
home_xy_position = 100,100
speed = 150
z_hop = 8
z_hop_speed = 10


## BLTouch mesh bed leveling
[bed_mesh]
speed = 200
horizontal_move_z = 5
mesh_min = 10,10
mesh_max = 195,180
probe_count = 5,5
fade_start = 1.0
fade_end = 7.0
algorithm = bicubic


## Manual mesh bed leveling
#[bed_mesh]
#speed = 50
#horizontal_move_z = 5
#mesh_min = 30,30
#mesh_max = 180,180
#probe_count = 5,5
#fade_start = 1.0
#fade_end = 10.0


## Enable moving befor homing
## Run in terminal:
## SET_KINEMATIC_POSITION X=100 Y=100 Z=100
## then move as usual
[force_move]
enable_force_move: True


[virtual_sdcard]
path: ~/.octoprint/uploads/


[output_pin BEEPER_pin]
pin: ar31
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001
scale: 1000


[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100


[gcode_macro M300]
default_parameter_S: 1000
default_parameter_P: 100
gcode:
    SET_PIN PIN=BEEPER_pin VALUE={S}
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0


[display_status]


# Change filament
[pause_resume]


[gcode_macro M600]
default_parameter_X: 50
default_parameter_Y: 0
default_parameter_Z: 10
gcode:
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-150 F1000
    M300 S299 P200
    M300 S299 P200
    M300 S299 P200
    M300 S299 P200
    M300 S299 P200
    RESTORE_GCODE_STATE NAME=M600_state


[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G1 X{x_park} Y{y_park} F6000


[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### end of definitions #####
  G91
  G1 E{E} F2100
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  G91
  G1 Z+20 E-10 F1500
  M107
  G90
  G1 X20 Y180 F1500
  M84
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT


## For Measuring Resonances through Raspberry pi
## https://www.klipper3d.org/Measuring_Resonances.html

#[mcu rpi]
#serial = /tmp/klipper_host_mcu

#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    100,100,20  # an example

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# pid_kp = 73.627
#*# pid_ki = 2.360
#*# pid_kd = 574.293
#*#
#*# [extruder]
#*# pid_kp = 20.901
#*# pid_ki = 0.693
#*# pid_kd = 157.541
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.011460, 0.031040, 0.003540, -0.038960, 0.001040
#*# 	  0.103540, 0.158540, 0.118540, 0.061040, 0.071040
#*# 	  0.223540, 0.253540, 0.211040, 0.146040, 0.156040
#*# 	  0.363540, 0.383540, 0.326040, 0.238540, 0.241040
#*# 	  0.486040, 0.498540, 0.428540, 0.358540, 0.353540
#*# tension = 0.2
#*# min_x = 10.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 10.0
#*# x_count = 5
#*# max_y = 180.0
#*# mesh_x_pps = 2
#*# max_x = 195.0
